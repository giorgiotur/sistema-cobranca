@echo off
setlocal enabledelayedexpansion
cls

echo üì¶ Iniciando o sistema...

REM ===============================
REM 1. DETECTAR CAMINHO DO PROJETO
REM ===============================
set PROJETO_DIR=

if exist "C:\Users\AgenteRF03\Documents\sistema-cobranca" (
    set PROJETO_DIR=C:\Users\AgenteRF03\Documents\sistema-cobranca
) else if exist "C:\Users\Documents\sistema-cobranca" (
    set PROJETO_DIR=C:\Users\Documents\sistema-cobranca
)

if not defined PROJETO_DIR (
    echo ‚ùå Projeto n√£o encontrado em nenhum caminho conhecido.
    pause
    exit /b
)

cd /d "!PROJETO_DIR!"
echo üìÅ Projeto localizado em: !PROJETO_DIR!

REM ===============================
REM 2. GIT PULL (ATUALIZAR PROJETO)
REM ===============================
echo üîÑ Atualizando projeto com Git...
git pull

REM ===============================
REM 3. CRIAR VENV SE NAO EXISTIR
REM ===============================
if not exist "venv\" (
    echo ‚öôÔ∏è Ambiente virtual n√£o encontrado. Criando...
    python -m venv venv
)

REM ===============================
REM 4. ATIVAR VENV
REM ===============================
call "venv\Scripts\activate.bat"

REM ===============================
REM 5. ATUALIZAR PIP AUTOMATICAMENTE
REM ===============================
echo üöÄ Atualizando pip...
python -m pip install --upgrade pip

REM ===============================
REM 6. INSTALAR DEPEND√äNCIAS
REM ===============================
if exist "requirements.txt" (
    echo üì¶ Instalando depend√™ncias do requirements.txt...
    pip install -r requirements.txt
) else (
    echo ‚ö†Ô∏è Arquivo requirements.txt n√£o encontrado. Pulando instala√ß√£o.
)

REM ===============================
REM 7. INICIAR FASTAPI E STREAMLIT
REM ===============================
start "FastAPI" cmd /k "cd /d !PROJETO_DIR! && call venv\\Scripts\\activate.bat && uvicorn app.main:app --reload"
start "Painel" cmd /k "cd /d !PROJETO_DIR! && call venv\\Scripts\\activate.bat && streamlit run painel.py"

REM ===============================
REM 8. COMMIT OPCIONAL AO FINAL
REM ===============================
echo.
set /p SALVAR=üîê Deseja salvar as altera√ß√µes no GitHub? (s para sim): 
if /I "!SALVAR!"=="s" (
    set /p COMMIT_MSG=üí¨ Digite a mensagem do commit: 
    if not "!COMMIT_MSG!"=="" (
        git add .
        git commit -m "!COMMIT_MSG!"
        git push
        echo ‚úÖ Altera√ß√µes enviadas com sucesso!
    ) else (
        echo ‚ö†Ô∏è Commit cancelado (mensagem em branco).
    )
) else (
    echo ‚ÑπÔ∏è Altera√ß√µes locais n√£o foram enviadas para o GitHub.
)

pause


